#include <reg51.h>

#define RS P2_0
#define RW P2_1
#define EN P2_2

sbit IR_sensor = P1^0;
sbit IR_sensor2 = P1^1;
unsigned char pulse = 0;
unsigned int speed = 0;

void delay(unsigned int count) {
    unsigned int i, j;
    for (i = 0; i < count; i++)
        for (j = 0; j < 1275; j++);
}

void lcd_cmd(unsigned char command) {
    RS = 0;
    RW = 0;
    P3 = command;
    EN = 1;
    delay(10);
    EN = 0;
}

void lcd_data(unsigned char disp_data) {
    RS = 1;
    RW = 0;
    P3 = disp_data;
    EN = 1;
    delay(10);
    EN = 0;
}

void lcd_init() {
    lcd_cmd(0x38);  // 2 lines, 5x7 matrix
    lcd_cmd(0x0C);  // Display on, cursor off
    lcd_cmd(0x01);  // Clear display
    lcd_cmd(0x06);  // Increment cursor
}

void display_speed(unsigned int speed_val) {
    lcd_cmd(0x80);  // Move cursor to the first line
    lcd_data('S');
    lcd_data('p');
    lcd_data('d');
    lcd_data(':');
    lcd_data((speed_val / 100) + '0');
    lcd_data(((speed_val / 10) % 10) + '0');
    lcd_data((speed_val % 10) + '0');
    lcd_data(' ');
    lcd_data('K');
    lcd_data('m');
    lcd_data('/');
    lcd_data('h');
}

void main() {
    unsigned int time1, time2;
    TMOD = 0x06;   // Timer1 mode2 (8-bit auto-reload)
    TH1 = 0;       // Initialize timer1
    TL1 = 0;
    TR1 = 1;       // Start timer1

    lcd_init();    // Initialize LCD

    while (1) {
        while (IR_sensor == 0);  // Wait for vehicle to pass first point
        TR1 = 1;                  // Start Timer
        while (IR_sensor2 == 0); // Wait for vehicle to pass second point
        TR1 = 0;                  // Stop Timer
        time1 = TH1;
        time2 = TL1;
        pulse = (time1 << 8) | time2;
        speed = (5 * 18) / pulse; // Calculating speed assuming 5 feet distance between two sensors
        display_speed(speed);     // Display speed on LCD
        delay(1000);              // Delay for better readability
    }
}
